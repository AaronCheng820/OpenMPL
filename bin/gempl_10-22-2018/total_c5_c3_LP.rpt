

=======================================================================
                      OpenMPL - Version 1.1                        
                                by                                   
                   Yibo Lin, Bei Yu, and  David Z. Pan               
               ECE Department, University of Texas at Austin         
                         Copyright (c) 2015                          
            Contact Authors:  {yibolin,bei,dpan}@cerc.utexas.edu     
=======================================================================
(D) size of Shape = 8 bytes
(D) size of Rectangle = 24 bytes
(D) size of Polygon = 32 bytes
****OPENMP not defined !****
(I) Reading input file /research/byu2/qsun/project/ISCAS_bench/ISCAS_total/total_c5.gds
(I) Ignored 0 duplicate patterns
(I) Input data for polygon based layout...
(I) # polygon rectangles = 9786
(I) Total patterns # = 5067
(I) Shape mode = POLYGON
(I) Coloring distance = 120 db ( 120 nm )
(I) Color num = 3
(I) Simplification level = 3
(I) Thread num = 8
(I) Uncolored layer # = 2 ( 1 101 )
(I) Precolored layer # = 0
(I) Path layer # = 0
(I) Algorithm = LP_GUROBI
(I) reading input files takes 0.900000 seconds CPU, 0.932509 seconds real
(I) Constructing graph for 5067 patterns...
(I) 5067 vertices, 10362 edges
(I) Computing connected components...
(I) Solving 4 independent components...
===================  Component  0 ====================
Component 0 has 18 componetns.
====** Sub_Component 0_0  **====
	pattern number : 100
	conflict number : 13
	0.260000000s user + 0.000000000s system = 0.260000000s (98.6%)
====** Sub_Component 0_1  **====
	pattern number : 120
	conflict number : 23
	0.210000000s user + 0.010000000s system = 0.220000000s (104.0%)
====** Sub_Component 0_2  **====
	pattern number : 119
	conflict number : 25
	0.280000000s user + 0.000000000s system = 0.280000000s (97.1%)
====** Sub_Component 0_3  **====
	pattern number : 113
	conflict number : 22
	0.200000000s user + 0.000000000s system = 0.200000000s (97.0%)
====** Sub_Component 0_4  **====
	pattern number : 114
	conflict number : 25
	0.320000000s user + 0.000000000s system = 0.320000000s (102.0%)
====** Sub_Component 0_5  **====
	pattern number : 100
	conflict number : 24
	0.190000000s user + 0.010000000s system = 0.200000000s (101.9%)
====** Sub_Component 0_6  **====
	pattern number : 93
	conflict number : 17
	0.130000000s user + 0.000000000s system = 0.130000000s (95.7%)
====** Sub_Component 0_7  **====
	pattern number : 89
	conflict number : 16
	0.140000000s user + 0.010000000s system = 0.150000000s (98.5%)
====** Sub_Component 0_8  **====
	pattern number : 70
	conflict number : 14
	0.080000000s user + 0.000000000s system = 0.080000000s (94.3%)
====** Sub_Component 0_9  **====
	pattern number : 120
	conflict number : 31
	0.280000000s user + 0.000000000s system = 0.280000000s (96.2%)
====** Sub_Component 0_10  **====
	pattern number : 91
	conflict number : 23
	0.150000000s user + 0.010000000s system = 0.160000000s (92.2%)
====** Sub_Component 0_11  **====
	pattern number : 111
	conflict number : 26
	0.230000000s user + 0.000000000s system = 0.230000000s (97.1%)
====** Sub_Component 0_12  **====
	pattern number : 92
	conflict number : 15
	0.170000000s user + 0.000000000s system = 0.170000000s (100.2%)
====** Sub_Component 0_13  **====
	pattern number : 112
	conflict number : 30
	0.250000000s user + 0.000000000s system = 0.250000000s (89.0%)
====** Sub_Component 0_14  **====
	pattern number : 105
	conflict number : 15
	0.260000000s user + 0.010000000s system = 0.270000000s (94.4%)
====** Sub_Component 0_15  **====
	pattern number : 85
	conflict number : 17
	0.190000000s user + 0.000000000s system = 0.190000000s (82.6%)
====** Sub_Component 0_16  **====
	pattern number : 115
	conflict number : 23
	0.290000000s user + 0.000000000s system = 0.290000000s (98.0%)
====** Sub_Component 0_17  **====
	pattern number : 97
	conflict number : 19
	0.180000000s user + 0.010000000s system = 0.190000000s (90.4%)
component_conflict_num = 378	acc_obj_value = 378
**** total time : 57.840000000s user + 0.070000000s system = 57.910000000s (98.0%)
===================  Component  1 ====================
Component 1 has 0 componetns.
component_conflict_num = 0	acc_obj_value = 0
**** total time : 0.000000000s user + 0.000000000s system = 0.000000000s (n/a%)
===================  Component  2 ====================
Component 2 has 0 componetns.
component_conflict_num = 0	acc_obj_value = 0
**** total time : 0.000000000s user + 0.000000000s system = 0.000000000s (n/a%)
===================  Component  3 ====================
Component 3 has 0 componetns.
component_conflict_num = 0	acc_obj_value = 0
**** total time : 0.000000000s user + 0.000000000s system = 0.000000000s (n/a%)
(I) coloring takes 58.330000 seconds CPU, 59.520413 seconds real
(I) Conflict number = 378
(I) Color 0 density = 2041
(I) Color 1 density = 2012
(I) Color 2 density = 1014
(I) Write output gds file: /research/byu2/qsun/project/gempl/bin/benchout/total_c5_out.gds
(I) writing output file takes 0.060000 seconds CPU, 0.095135 seconds real
(I) program takes 59.290000 seconds CPU, 60.550023 seconds real

real	1m0.559s
user	0m59.216s
sys	0m0.085s
